=begin
	
1) В строке S из N символов правильно расставлены скобки, если:
S строка пустая;
S вида "(U)" где U строка с правильно расставленными скобками;
S вида "VW" где V и W строки с правильно расставленными скобками.
Для примера в строке "(()(())())" скобки расставлены правильно, а в строке "())" нет.

Необходимо написать функцию:

def solution(s)

которая по строек из  N символов, вернет 1 если строка с правильно расставленными скобками и 0 в противном случае.

Для примера,  для строки "(()(())())" должна вернуть 1 , а для строки "())", должна вернуть 0.

Предполагаем:

N  число в диапазоне [0..1,000,000];
строка S состоит только из символов "(" и/или ")".
Сложность алгоритма должна быть:

для самого худшего случая не более чем O(N);

=end

=begin
Идея решения: 
 Не корректны такие расстановки скобок, где закрывающие идут раньше открывающих
 Открывающая скобка сама по себе не может быть стоять не правильно
 Вопрос в том, будет ли она закрыта

 В общем, заводим счётчик n=0, 
  на открывающей скобке +1
  на закрывающей скобке -1
  нельзя уходить в минус
  по завершению всей последовательности должен получиться n=0

  Оптимизация: предварительно проверить, что число символов чётно
=end

def solution(s)
	return 0 until (s.length % 2 == 0)
	n = 0
	s.each_char do |c|
		n += (c == '(' ? 1 : -1)
		return 0 if n < 0
	end
	return n == 0 ? 1 : 0
end

examples = [
	"((()))()(()())",
	")(",
	"((()",
	"(()",
	"()(())()(((()()())))"
	]

examples.each do |s|
	puts s + " -> " + solution(s).to_s
end
